---

- name: Check if logstash users file exists
  stat: path=/home/ec2-user/.vars/logstash_users.yaml
  register: stat_logstash_users
  become: no
  delegate_to: localhost
  connection: local

- name: Load logstash users
  include_vars: file=/home/ec2-user/.vars/logstash_users.yaml
  when: stat_logstash_users.stat.exists

- name: Generate random passwords for logstash users
  set_fact:
    logstash_users:
      logstash_internal: "{{ lookup('password', '/dev/null length=20 chars=ascii_letters,digits') }}"
  when: not stat_logstash_users.stat.exists

- name: Rewrite logstash users file
  template: src=logstash-users.yaml.j2 dest=/home/ec2-user/.vars/logstash_users.yaml mode=0644
  become: no
  delegate_to: localhost
  connection: local

- name: Load ansible users
  include_vars: file=/home/ec2-user/.vars/elasticsearch_users.yaml

- name: Define logstash_internal user
  uri:
    url: "{{ elasticsearch_url }}/_security/role/logstash_writer"
    body:
      cluster:
        - manage_index_templates
        - monitor
        - manage_ilm
      indices:
        - names: ["*"]
          priileges:
            - write
            - create
            - delete
            - create_index
            - manage
            - manage_ilm
    user: "{{ elasticsearch_user }}"
    password: "{{ elasticsearch_passwords[elasticsearch_user] }}"
    method: PUT
    body_format: json
  register: out

- debug: var=out


